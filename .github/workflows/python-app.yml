name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: "ci-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  # Job instalacji zależności
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install project dependencies with Poetry
      run: poetry install

  # Job dla testów statycznych kodu
  static_checks:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: poetry install

    - name: Run Linter (flake8)
      run: |
        poetry run flake8 .

    - name: Run Formatter (black)
      run: |
        poetry run black --check .

    - name: Run Security Analysis (bandit)
      run: |
        poetry run bandit -r .

  # Job dla testów jednostkowych
  unit_tests:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: 
